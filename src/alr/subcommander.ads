with AAA.Strings;
with GNAT.Command_Line;

package SubCommander is

   --  This root package defines the interface types to be unsed in the
   --  SubCommander. See SubCommander.Instance to create the parser/executor.

   -------------
   -- Command --
   -------------

   type Command is limited interface;
   --  This type encapsulates configuration and execution of a specific
   --  command. It also has help-related subprograms. Help is structured as:
   --  1. SUMMARY, showing <one-liner explanation>
   --  <one-liner explanation> is provided by Short_Description (see below).
   --
   --  2. USAGE, "alr [global options] command [command options]" & [args text]
   --  [args text] is provided by Usage_Custom_Parameters (see below).
   --
   --  3. GLOBAL OPTIONS explanation.
   --  Autogenerated by GNAT.Command_Line.
   --  Global arguments are set up by alr for all commands.
   --
   --  4. COMMAND OPTIONS explanation (if existing).
   --  Autogenerated by GNAT.Command_Line.
   --  Command switches are set up by each command with Setup_Switches (below).
   --
   --  5. DESCRIPTION, custom detailed command explanation.
   --  Commands provide this text with Long_Description (see below).

   type Command_Access is access all Command'Class;

   function Name (Cmd : Command) return String
   is abstract;
   --  Commands must override this procedure to provide the command name.

   procedure Execute (Cmd  : in out Command;
                      Args :        AAA.Strings.Vector)
   is abstract;
   --  Commands must override this procedure to provide the command
   --  functionality. Should raise Command_Failed if command cannot be
   --  completed normally. Should raise Wrong_Command_Arguments if the
   --  arguments are incorrect.

   function Long_Description (Cmd : Command) return AAA.Strings.Vector
                              is abstract;
   --  Return a detailed description of the command. Each string in the vector
   --  is a paragraph that will be reformatted into appropriate length lines.

   procedure Setup_Switches
     (Cmd    : in out Command;
      Config : in out GNAT.Command_Line.Command_Line_Configuration)
   is null;
   --  Gets called once the command has been identified, but before the call to
   --  Execute. Config must be set up with the switches used by the command.

   function Short_Description (Cmd : Command) return String is abstract;
   --  One-liner displayed in the list of commands that alr understands that
   --  gets shown when no command or unknown command is given. Also shown as
   --  SUMMARY in the help of a specific command.

   function Usage_Custom_Parameters (Cmd : Command) return String is abstract;
   --  The part after "alr [global options] command [command options] " that
   --  gets shown in USAGE in the command help summary. That is, it is the
   --  specific command-line part that is not managed via Gnat.Command_Line

   -----------------
   --  Help_Topic --
   -----------------

   type Help_Topic is limited interface;

   type Help_Topic_Access is access all Help_Topic'Class;

   function Name (This : Help_Topic) return String
   is abstract;

   function Title (This : Help_Topic) return String
   is abstract;

   function Content (This : Help_Topic) return AAA.Strings.Vector
   is abstract;

end SubCommander;
