name: CI self+toolchain
# Build Alire with `alr build` and using a toolchain installed from Alire
# The `alr` being tested is the one which is being submitted in the PR

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rst'
      - '**.txt'

jobs:

  build:
    name: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-latest
          - windows-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Set up alr to be able to install the default toolchain
      uses: alire-project/setup-alire@v1

    - name: Build alr with default toolchain
      run: alr exec -- gprbuild -P alr_env.gpr

    - name: Show dependencies/pins
      run: ./bin/alr -n -q with --solve || ./bin/alr -n -v -d with --solve

    - name: Show build environment
      run: ./bin/alr -n printenv

    - name: SELF-BUILD
      run: ./bin/alr -n build

    # For some reason I cannot pinpoint, the Windows build is seeing two
    # different environments that mess things up. The build succeeds though.
    - name: Show built version
      if: matrix.os != 'windows-latest'
      run: ./bin/alr -n version

    # Run the testsuite with the just build alr. The testsuite picks the proper
    # alr in the ./bin/alr location.

    - name: Install Python 3.x (required for the testsuite)
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Run test script
      run: scripts/ci-github.sh
      shell: bash
      env:
        BRANCH: ${{ github.base_ref }}
