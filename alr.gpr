with "aaa";
with "ada_toml";
with "alire";
with "alire_common";
with "ajunitgen";
with "semantic_versioning";
with "simple_logging";
with "uri_ada";
with "xml_ez_out";

project Alr is

   Src_Dirs := ("src/alr");

   case Alire_Common.Host_Os is
      when "freebsd" => Src_Dirs := Src_Dirs & ("src/alr/os_linux");
      when "openbsd" => Src_Dirs := Src_Dirs & ("src/alr/os_linux");
      when "linux"   => Src_Dirs := Src_Dirs & ("src/alr/os_linux");
      when "macos"   => Src_Dirs := Src_Dirs & ("src/alr/os_macos");
      when "windows" => Src_Dirs := Src_Dirs & ("src/alr/os_windows");
   end case;

   for Source_Dirs use Src_Dirs;

   for Object_Dir use "obj";
   for Exec_Dir use "bin";
   for Main use ("alr-main.adb");

   for Languages use ("Ada");

   package Compiler renames Alire_Common.Compiler;

   package Builder is
      for Switches ("Ada") use Alire_Common.Builder'Switches ("Ada");
      for Executable ("alr-main.adb") use "alr";
   end Builder;

   package Binder renames Alire_Common.Binder;
   package Ide renames Alire_Common.Ide;

end Alr;
